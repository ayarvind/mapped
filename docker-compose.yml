services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      retries: 5
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  # backend:
  #   build: .
  #   container_name: backend
    
  #   ports:
  #     - "5000:5000"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - KAFKA_BROKERS=kafka:9092
  #     - DATABASE_URL=postgresql://postgres.bgrodwiztuiiunblpdbu:L3z1PS9Z3wCpAjkt@aws-0-ap-south-1.pooler.supabase.com:5432/postgres

  #   networks:
  #     - backend

networks:
  backend:
    driver: bridge
