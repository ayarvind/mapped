services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart : always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    env_file:
      - .env
    networks:
      - backend

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      retries: 5
    env_file:
      - .env
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    networks:
      - backend

  backend:
    container_name: backend
    image: ayarwind/mapped:latest
    restart: always
    ports:
      - "80:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - kafka
      - redis
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    networks:
      - backend
    
    entrypoint: >
      npm run start 

networks:
  backend:
    driver: bridge
